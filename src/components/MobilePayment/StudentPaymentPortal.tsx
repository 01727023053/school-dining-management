import React, { useState } from 'react';
import { CreditCard, Smartphone, QrCode, Copy, Share2, CheckCircle, AlertCircle, ArrowLeft, Phone, MessageSquare } from 'lucide-react';
import { useAuth } from '../../contexts/AuthContext';
import { useData } from '../../contexts/DataContext';
import { useNavigate } from 'react-router-dom';
import toast from 'react-hot-toast';

const StudentPaymentPortal: React.FC = () => {
  const { user } = useAuth();
  const { students, addPayment } = useData();
  const navigate = useNavigate();
  const [selectedMethod, setSelectedMethod] = useState<'bkash' | 'nagad' | 'rocket' | 'upay'>('bkash');
  const [amount, setAmount] = useState(0);
  const [transactionId, setTransactionId] = useState('');
  const [isProcessing, setIsProcessing] = useState(false);

  const studentData = students.find(s => s.name === user?.name);

  const paymentMethods = [
    {
      id: 'bkash',
      name: '‡¶¨‡¶ø‡¶ï‡¶æ‡¶∂',
      number: '‡ß¶‡ßß‡ß©‡ß¶ ‡ßØ‡ß™ ‡ßß‡ßØ‡ß™‡ß¶',
      type: '‡¶Æ‡¶æ‡¶∞‡ßç‡¶ö‡ßá‡¶®‡ßç‡¶ü',
      color: 'bg-pink-500',
      bgColor: 'bg-pink-50',
      borderColor: 'border-pink-200',
      icon: 'üì±'
    },
    {
      id: 'nagad',
      name: '‡¶®‡¶ó‡¶¶',
      number: '‡ß¶‡ßß‡ß©‡ß¶‡ß© ‡ßØ‡ß™‡ßß ‡ßØ‡ß™‡ß¶',
      type: '‡¶™‡¶æ‡¶∞‡ßç‡¶∏‡ßã‡¶®‡¶æ‡¶≤',
      color: 'bg-orange-500',
      bgColor: 'bg-orange-50',
      borderColor: 'border-orange-200',
      icon: 'üí≥'
    },
    {
      id: 'rocket',
      name: '‡¶∞‡¶ï‡ßá‡¶ü',
      number: '‡ß¶‡ßß‡ß≠‡ßß‡ß®‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ',
      type: '‡¶è‡¶ú‡ßá‡¶®‡ßç‡¶ü',
      color: 'bg-purple-500',
      bgColor: 'bg-purple-50',
      borderColor: 'border-purple-200',
      icon: 'üöÄ'
    },
    {
      id: 'upay',
      name: '‡¶â‡¶™‡¶æ‡¶Ø‡¶º',
      number: '‡ß¶‡ßß‡ßÆ‡ßß‡ß®‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ',
      type: '‡¶™‡¶æ‡¶∞‡ßç‡¶∏‡ßã‡¶®‡¶æ‡¶≤',
      color: 'bg-blue-500',
      bgColor: 'bg-blue-50',
      borderColor: 'border-blue-200',
      icon: 'üíé'
    }
  ];

  const selectedMethodData = paymentMethods.find(m => m.id === selectedMethod);

  const handlePayment = async () => {
    if (!amount || amount < 50) {
      toast.error('‡¶∏‡¶∞‡ßç‡¶¨‡¶®‡¶ø‡¶Æ‡ßç‡¶® ‡ß´‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®');
      return;
    }

    if (!transactionId) {
      toast.error('‡¶ü‡ßç‡¶∞‡¶æ‡¶®‡¶ú‡ßá‡¶ï‡¶∂‡¶® ID ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®');
      return;
    }

    if (!studentData) {
      toast.error('‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø');
      return;
    }

    setIsProcessing(true);

    try {
      // Simulate payment processing
      await new Promise(resolve => setTimeout(resolve, 2000));

      addPayment({
        studentId: studentData.id,
        amount: amount,
        method: selectedMethod,
        transactionId: transactionId,
        date: new Date().toISOString().split('T')[0],
        status: 'completed'
      });

      toast.success(`‚úÖ ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶∏‡¶´‡¶≤! ‡ß≥${amount} ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü‡ßá ‡¶Ø‡ßã‡¶ó ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá`);
      
      // Reset form
      setAmount(0);
      setTransactionId('');
    } catch (error) {
      toast.error('‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶• ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§');
    } finally {
      setIsProcessing(false);
    }
  };

  const copyNumber = (number: string) => {
    navigator.clipboard.writeText(number);
    toast.success('‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶ï‡¶™‡¶ø ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!');
  };

  const callNumber = (number: string) => {
    window.open(`tel:${number}`);
    toast.success('‡¶ï‡¶≤ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...');
  };

  const sendSMS = () => {
    if (!studentData) return;
    const message = `‡¶Ü‡¶Æ‡¶ø ${studentData.name}, ‡¶∞‡ßã‡¶≤: ${studentData.roll}‡•§ ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶Æ‡¶ø‡¶≤ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü‡ßá ‡ß≥${amount} ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶á‡•§`;
    window.open(`sms:01712345678?body=${encodeURIComponent(message)}`);
    toast.success('SMS ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶ñ‡ßã‡¶≤‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...');
  };

  if (!studentData) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center p-4">
        <div className="bg-white rounded-lg shadow-lg p-8 max-w-md w-full text-center">
          <AlertCircle className="w-16 h-16 text-red-500 mx-auto mb-4" />
          <h2 className="text-xl font-bold text-gray-800 mb-2 font-bengali">
            ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø
          </h2>
          <p className="text-gray-600 mb-6 font-bengali">
            ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶ï‡ßã‡¶® ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Æ‡¶ø‡¶≤‡¶õ‡ßá ‡¶®‡¶æ‡•§ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶®‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®‡•§
          </p>
          <button
            onClick={() => navigate('/')}
            className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors font-bengali"
          >
            ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶°‡ßá ‡¶´‡¶ø‡¶∞‡ßá ‡¶Ø‡¶æ‡¶®
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 p-4">
      <div className="max-w-4xl mx-auto space-y-6">
        {/* Header */}
        <div className="flex items-center justify-between">
          <button
            onClick={() => navigate('/')}
            className="flex items-center space-x-2 text-gray-600 hover:text-gray-800 transition-colors"
          >
            <ArrowLeft className="w-5 h-5" />
            <span className="font-bengali">‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶°‡ßá ‡¶´‡¶ø‡¶∞‡ßá ‡¶Ø‡¶æ‡¶®</span>
          </button>
          <h1 className="text-2xl font-bold text-gray-800 font-bengali">üí≥ ‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶® ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü</h1>
        </div>

        {/* Student Info Card */}
        <div className="bg-white rounded-lg shadow-lg p-6">
          <div className="flex items-center space-x-4 mb-4">
            <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center">
              {studentData.photo ? (
                <img src={studentData.photo} alt={studentData.name} className="w-full h-full object-cover rounded-full" />
              ) : (
                <span className="text-2xl font-bold text-blue-600">{studentData.name.charAt(0)}</span>
              )}
            </div>
            <div>
              <h2 className="text-xl font-bold text-gray-800 font-bengali">{studentData.name}</h2>
              <p className="text-gray-600">‡¶∞‡ßã‡¶≤: {studentData.roll} | ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏: {studentData.class}-{studentData.section}</p>
              <p className={`text-lg font-bold ${studentData.balance <= 300 ? 'text-red-600' : 'text-green-600'}`}>
                ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏: ‡ß≥{studentData.balance}
              </p>
            </div>
          </div>

          {studentData.balance <= 300 && (
            <div className="bg-red-50 border border-red-200 rounded-lg p-4 mb-4">
              <div className="flex items-center">
                <AlertCircle className="w-5 h-5 text-red-500 mr-2" />
                <span className="font-medium text-red-800 font-bengali">
                  ‚ö†Ô∏è ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏ ‡¶ï‡¶Æ! ‡¶Ö‡¶¨‡¶ø‡¶≤‡¶Æ‡ßç‡¶¨‡ßá ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®‡•§
                </span>
              </div>
            </div>
          )}
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* Payment Form */}
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h3 className="text-lg font-semibold text-gray-800 mb-6 font-bengali">‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®</h3>
            
            {/* Amount Selection */}
            <div className="mb-6">
              <label className="block text-sm font-medium text-gray-700 font-bengali mb-3">
                ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ (‡ß≥)
              </label>
              <div className="grid grid-cols-3 gap-3 mb-3">
                {[100, 200, 500, 1000, 2000, 5000].map(quickAmount => (
                  <button
                    key={quickAmount}
                    onClick={() => setAmount(quickAmount)}
                    className={`py-2 px-3 rounded-lg border transition-colors font-bengali ${
                      amount === quickAmount 
                        ? 'bg-blue-600 text-white border-blue-600' 
                        : 'bg-gray-50 text-gray-700 border-gray-300 hover:bg-gray-100'
                    }`}
                  >
                    ‡ß≥{quickAmount}
                  </button>
                ))}
              </div>
              <input
                type="number"
                value={amount}
                onChange={(e) => setAmount(Number(e.target.value))}
                min="50"
                className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                placeholder="‡¶Ö‡¶•‡¶¨‡¶æ ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶® (‡¶∏‡¶∞‡ßç‡¶¨‡¶®‡¶ø‡¶Æ‡ßç‡¶® ‡ß´‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ)"
              />
            </div>

            {/* Payment Link Generator */}
            <div className="mb-6 bg-blue-50 border border-blue-200 rounded-lg p-4">
              <h4 className="font-medium text-blue-800 font-bengali mb-3">üîó ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶®</h4>
              <div className="space-y-3">
                <button
                  onClick={() => {
                    const paymentLink = `${window.location.origin}/student-payment?student=${studentData.id}&amount=${amount}&method=${selectedMethod}`;
                    navigator.clipboard.writeText(paymentLink);
                    toast.success('‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶ï‡¶™‡¶ø ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!');
                  }}
                  disabled={!amount || amount < 50}
                  className="w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 font-bengali"
                >
                  üìã ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶ï‡¶™‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶®
                </button>
                
                <button
                  onClick={() => {
                    const shareText = `${studentData.name} ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡ß≥${amount} ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®\n${selectedMethodData?.name}: ${selectedMethodData?.number}\n‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶≤‡¶ø‡¶Ç‡¶ï: ${window.location.origin}/student-payment`;
                    if (navigator.share) {
                      navigator.share({
                        title: '‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶≤‡¶ø‡¶Ç‡¶ï',
                        text: shareText
                      });
                    } else {
                      navigator.clipboard.writeText(shareText);
                      toast.success('‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶§‡¶•‡ßç‡¶Ø ‡¶ï‡¶™‡¶ø ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!');
                    }
                  }}
                  disabled={!amount || amount < 50}
                  className="w-full bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700 transition-colors disabled:opacity-50 font-bengali"
                >
                  üì§ ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶§‡¶•‡ßç‡¶Ø ‡¶∂‡ßá‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®
                </button>
              </div>
            </div>
            {/* Payment Method Selection */}
            <div className="mb-6">
              <label className="block text-sm font-medium text-gray-700 font-bengali mb-3">
                ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶Æ‡ßá‡¶•‡¶° ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®
              </label>
              <div className="grid grid-cols-1 gap-3">
                {paymentMethods.map(method => (
                  <label 
                    key={method.id}
                    className={`flex items-center p-4 border-2 rounded-lg cursor-pointer transition-all ${
                      selectedMethod === method.id 
                        ? `${method.borderColor} ${method.bgColor}` 
                        : 'border-gray-200 hover:border-gray-300'
                    }`}
                  >
                    <input
                      type="radio"
                      name="paymentMethod"
                      value={method.id}
                      checked={selectedMethod === method.id}
                      onChange={(e) => setSelectedMethod(e.target.value as any)}
                      className="w-4 h-4 text-blue-600 focus:ring-blue-500 border-gray-300"
                    />
                    <div className="ml-3 flex items-center space-x-3 flex-1">
                      <div className={`w-10 h-10 ${method.color} rounded-lg flex items-center justify-center text-white text-lg`}>
                        {method.icon}
                      </div>
                      <div className="flex-1">
                        <div className="font-medium text-gray-900 font-bengali">{method.name}</div>
                        <div className="text-sm text-gray-600">{method.number}</div>
                        <div className="text-xs text-gray-500 font-bengali">{method.type}</div>
                      </div>
                      <div className="flex space-x-2">
                        <button
                          type="button"
                          onClick={() => copyNumber(method.number)}
                          className="p-2 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors"
                          title="‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶ï‡¶™‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶®"
                        >
                          <Copy className="w-4 h-4 text-gray-600" />
                        </button>
                        <button
                          type="button"
                          onClick={() => callNumber(method.number)}
                          className="p-2 bg-green-100 rounded-lg hover:bg-green-200 transition-colors"
                          title="‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßÅ‡¶®"
                        >
                          <Phone className="w-4 h-4 text-green-600" />
                        </button>
                      </div>
                    </div>
                  </label>
                ))}
              </div>
            </div>

            {/* Selected Method Info */}
            {selectedMethodData && (
              <div className={`${selectedMethodData.bgColor} ${selectedMethodData.borderColor} border-2 rounded-lg p-4 mb-6`}>
                <div className="flex items-center space-x-3 mb-3">
                  <div className={`w-8 h-8 ${selectedMethodData.color} rounded-lg flex items-center justify-center text-white`}>
                    {selectedMethodData.icon}
                  </div>
                  <div>
                    <p className="font-medium text-gray-800 font-bengali">
                      {selectedMethodData.name} - {selectedMethodData.number}
                    </p>
                    <p className="text-sm text-gray-600 font-bengali">
                      {selectedMethodData.type} ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü
                    </p>
                  </div>
                </div>
                <div className="bg-white rounded-lg p-3 border">
                  <h4 className="font-medium text-gray-800 font-bengali mb-2">‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡ßá‡¶∂‡¶®‡¶æ:</h4>
                  <ol className="text-sm text-gray-600 space-y-1 font-bengali">
                    <li>‡ßß. ‡¶â‡¶™‡¶∞‡ßá‡¶∞ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞‡ßá Send Money ‡¶ï‡¶∞‡ßÅ‡¶®</li>
                    <li>‡ß®. ‡¶∞‡ßá‡¶´‡¶æ‡¶∞‡ßá‡¶®‡ßç‡¶∏‡ßá ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®: "{studentData.name} - {studentData.roll}"</li>
                    <li>‡ß©. ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶® ‡¶π‡¶≤‡ßá ‡¶ü‡ßç‡¶∞‡¶æ‡¶®‡¶ú‡ßá‡¶ï‡¶∂‡¶® ID ‡¶®‡¶ø‡¶ö‡ßá ‡¶¶‡¶ø‡¶®</li>
                  </ol>
                </div>
              </div>
            )}

            {/* Transaction ID */}
            <div className="mb-6">
              <label className="block text-sm font-medium text-gray-700 font-bengali mb-2">
                ‡¶ü‡ßç‡¶∞‡¶æ‡¶®‡¶ú‡ßá‡¶ï‡¶∂‡¶® ID <span className="text-red-500">*</span>
              </label>
              <input
                type="text"
                value={transactionId}
                onChange={(e) => setTransactionId(e.target.value)}
                className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                placeholder="‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶™‡¶∞ ‡¶ü‡ßç‡¶∞‡¶æ‡¶®‡¶ú‡ßá‡¶ï‡¶∂‡¶® ID ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®"
              />
            </div>

            {/* Submit Button */}
            <button
              onClick={handlePayment}
              disabled={isProcessing || !amount || !transactionId || amount < 50}
              className="w-full bg-gradient-to-r from-green-600 to-green-700 text-white py-3 px-4 rounded-lg hover:from-green-700 hover:to-green-800 transition-all disabled:opacity-50 disabled:cursor-not-allowed font-bengali flex items-center justify-center space-x-2"
            >
              {isProcessing ? (
                <>
                  <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white"></div>
                  <span>‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏‡¶ø‡¶Ç...</span>
                </>
              ) : (
                <>
                  <CheckCircle className="w-5 h-5" />
                  <span>‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶®</span>
                </>
              )}
            </button>

            {/* Help Button */}
            <button
              onClick={sendSMS}
              className="w-full mt-3 bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors font-bengali flex items-center justify-center space-x-2"
            >
              <MessageSquare className="w-4 h-4" />
              <span>‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø SMS ‡¶™‡¶æ‡¶†‡¶æ‡¶®</span>
            </button>
          </div>

          {/* Payment Guide */}
          <div className="space-y-6">
            {/* QR Code */}
            <div className="bg-white rounded-lg shadow-lg p-6">
              <h3 className="text-lg font-semibold text-gray-800 mb-4 font-bengali">QR ‡¶ï‡ßã‡¶° ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü</h3>
              <div className="text-center">
                <div className="w-48 h-48 bg-gradient-to-br from-blue-50 to-purple-50 rounded-lg mx-auto flex items-center justify-center mb-4 border-2 border-dashed border-gray-300">
                  <QrCode className="w-24 h-24 text-gray-400" />
                </div>
                <p className="text-sm text-gray-600 font-bengali mb-4">
                  QR ‡¶ï‡ßã‡¶° ‡¶∏‡ßç‡¶ï‡ßç‡¶Ø‡¶æ‡¶® ‡¶ï‡¶∞‡ßá ‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
                </p>
                <button className="bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700 transition-colors font-bengali">
                  QR ‡¶ï‡ßã‡¶° ‡¶ú‡ßá‡¶®‡¶æ‡¶∞‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
                </button>
              </div>
            </div>

            {/* Payment Guide */}
            <div className="bg-white rounded-lg shadow-lg p-6">
              <h3 className="text-lg font-semibold text-gray-800 mb-4 font-bengali">‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ó‡¶æ‡¶á‡¶°</h3>
              <div className="space-y-4">
                <div className="flex items-start space-x-3">
                  <div className="w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                    <span className="text-blue-600 text-sm font-bold">‡ßß</span>
                  </div>
                  <div>
                    <h4 className="font-medium text-gray-900 font-bengali">‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶Æ‡ßá‡¶•‡¶° ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶®</h4>
                    <p className="text-sm text-gray-600 font-bengali">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ‡¶Æ‡¶§ ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶Ç‡¶ï‡¶ø‡¶Ç ‡¶¨‡ßá‡¶õ‡ßá ‡¶®‡¶ø‡¶®</p>
                  </div>
                </div>

                <div className="flex items-start space-x-3">
                  <div className="w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                    <span className="text-blue-600 text-sm font-bold">‡ß®</span>
                  </div>
                  <div>
                    <h4 className="font-medium text-gray-900 font-bengali">Send Money ‡¶ï‡¶∞‡ßÅ‡¶®</h4>
                    <p className="text-sm text-gray-600 font-bengali">‡¶™‡ßç‡¶∞‡¶¶‡¶§‡ßç‡¶§ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞‡ßá ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶™‡¶æ‡¶†‡¶æ‡¶®</p>
                  </div>
                </div>

                <div className="flex items-start space-x-3">
                  <div className="w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                    <span className="text-blue-600 text-sm font-bold">‡ß©</span>
                  </div>
                  <div>
                    <h4 className="font-medium text-gray-900 font-bengali">‡¶ü‡ßç‡¶∞‡¶æ‡¶®‡¶ú‡ßá‡¶ï‡¶∂‡¶® ID ‡¶¶‡¶ø‡¶®</h4>
                    <p className="text-sm text-gray-600 font-bengali">‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶∏‡¶´‡¶≤ ‡¶π‡¶≤‡ßá ID ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®</p>
                  </div>
                </div>

                <div className="flex items-start space-x-3">
                  <div className="w-6 h-6 bg-green-100 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                    <CheckCircle className="w-4 h-4 text-green-600" />
                  </div>
                  <div>
                    <h4 className="font-medium text-gray-900 font-bengali">‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶®!</h4>
                    <p className="text-sm text-gray-600 font-bengali">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶π‡¶¨‡ßá</p>
                  </div>
                </div>
              </div>
            </div>

            {/* Contact Info */}
            <div className="bg-white rounded-lg shadow-lg p-6">
              <h3 className="text-lg font-semibold text-gray-800 mb-4 font-bengali">‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®?</h3>
              <div className="space-y-3">
                <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                  <div>
                    <p className="font-medium text-gray-900 font-bengali">‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤ ‡¶Ö‡¶´‡¶ø‡¶∏</p>
                    <p className="text-sm text-gray-600">‡ß¶‡ßß‡ß≠‡ßß‡ß®‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ</p>
                  </div>
                  <button
                    onClick={() => callNumber('01712345678')}
                    className="bg-green-600 text-white p-2 rounded-lg hover:bg-green-700 transition-colors"
                  >
                    <Phone className="w-4 h-4" />
                  </button>
                </div>
                
                <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                  <div>
                    <p className="font-medium text-gray-900 font-bengali">‡¶Ö‡¶≠‡¶ø‡¶≠‡¶æ‡¶¨‡¶ï</p>
                    <p className="text-sm text-gray-600">{studentData.parentPhone}</p>
                  </div>
                  <button
                    onClick={() => callNumber(studentData.parentPhone)}
                    className="bg-blue-600 text-white p-2 rounded-lg hover:bg-blue-700 transition-colors"
                  >
                    <Phone className="w-4 h-4" />
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Important Notice */}
        <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
          <div className="flex items-center">
            <AlertCircle className="w-5 h-5 text-yellow-600 mr-2" />
            <div>
              <h4 className="font-medium text-yellow-800 font-bengali">‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶§‡¶•‡ßç‡¶Ø</h4>
              <p className="text-sm text-yellow-700 font-bengali mt-1">
                ‚Ä¢ ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶™‡¶∞ ‡¶Ö‡¶¨‡¶∂‡ßç‡¶Ø‡¶á ‡¶ü‡ßç‡¶∞‡¶æ‡¶®‡¶ú‡ßá‡¶ï‡¶∂‡¶® ID ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶®
                ‚Ä¢ ‡¶≠‡ßÅ‡¶≤ ‡¶§‡¶•‡ßç‡¶Ø ‡¶¶‡¶ø‡¶≤‡ßá ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶¨‡¶ø‡¶≤‡¶Æ‡ßç‡¶¨‡¶ø‡¶§ ‡¶π‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá
                ‚Ä¢ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶≤‡ßá ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤ ‡¶Ö‡¶´‡¶ø‡¶∏‡ßá ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default StudentPaymentPortal;