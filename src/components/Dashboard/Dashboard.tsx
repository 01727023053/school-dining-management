import React from 'react';
import { Users, UserCheck, CreditCard, AlertTriangle, Wallet, TrendingUp } from 'lucide-react';
import { useData } from '../../contexts/DataContext';
import { useAuth } from '../../contexts/AuthContext';
import { useNavigate } from 'react-router-dom';
import { format } from 'date-fns';
import toast from 'react-hot-toast';

const Dashboard: React.FC = () => {
  const { students, attendance, payments, cashEntries } = useData();
  const { user } = useAuth();
  const navigate = useNavigate();

  const today = format(new Date(), 'yyyy-MM-dd');
  const todayAttendance = attendance.filter(a => a.date === today);
  const presentToday = todayAttendance.filter(a => a.present).length;
  const totalStudents = students.length;
  const lowBalanceStudents = students.filter(s => s.balance <= 300);
  const totalCash = cashEntries.reduce((sum, entry) => sum + entry.amount, 0);
  const todayPayments = payments.filter(p => p.date === today);
  const todayPaymentTotal = todayPayments.reduce((sum, p) => sum + p.amount, 0);

  // Handle stat card clicks
  const handleStatClick = (statType: string) => {
    switch (statType) {
      case 'students':
        navigate('/students');
        toast.success('‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ ‡¶™‡ßá‡¶ú‡ßá ‡¶®‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ø‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá');
        break;
      case 'attendance':
        navigate('/attendance');
        toast.success('‡¶â‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§‡¶ø ‡¶™‡ßá‡¶ú‡ßá ‡¶®‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ø‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá');
        break;
      case 'payments':
        navigate('/payments');
        toast.success('‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶™‡ßá‡¶ú‡ßá ‡¶®‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ø‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá');
        break;
      case 'cash':
        navigate('/cash-tracking');
        toast.success('‡¶ï‡ßç‡¶Ø‡¶æ‡¶∂ ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï‡¶ø‡¶Ç ‡¶™‡ßá‡¶ú‡ßá ‡¶®‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ø‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá');
        break;
      case 'lowBalance':
        navigate('/students');
        toast(`${lowBalanceStudents.length} ‡¶ú‡¶® ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏ ‡¶ï‡¶Æ`);
        break;
      default:
        toast.info('‡¶è‡¶á ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞ ‡¶∂‡ßÄ‡¶ò‡ßç‡¶∞‡¶á ‡¶Ü‡¶∏‡¶õ‡ßá');
    }
  };

  const stats = [
    {
      title: '‡¶Æ‡ßã‡¶ü ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ',
      value: totalStudents,
      icon: Users,
      color: 'bg-blue-500',
      type: 'students'
    },
    {
      title: '‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶â‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§‡¶ø',
      value: `${presentToday}/${totalStudents}`,
      icon: UserCheck,
      color: 'bg-green-500',
      type: 'attendance'
    },
    {
      title: '‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü',
      value: `‡ß≥${todayPaymentTotal}`,
      icon: CreditCard,
      color: 'bg-purple-500',
      type: 'payments'
    },
    {
      title: '‡¶Æ‡ßã‡¶ü ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∂',
      value: `‡ß≥${totalCash}`,
      icon: Wallet,
      color: 'bg-indigo-500',
      type: 'cash'
    },
    {
      title: '‡¶ï‡¶Æ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏',
      value: lowBalanceStudents.length,
      icon: AlertTriangle,
      color: 'bg-red-500',
      type: 'lowBalance'
    }
  ];

  if (user?.role === 'student') {
    const studentData = students.find(s => s.name === user.name);
    return (
      <div className="space-y-6">
        <div className="flex items-center justify-between">
          <h1 className="text-2xl font-bold text-gray-800 font-bengali">‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶°</h1>
          <div className="text-sm text-gray-600 font-bengali">
            {format(new Date(), 'EEEE, MMMM dd, yyyy')}
          </div>
        </div>

        {/* Quick Payment Button */}
        <div className="bg-gradient-to-r from-green-400 to-blue-500 rounded-lg p-6 text-white shadow-lg">
          <div className="flex items-center justify-between">
            <div>
              <h2 className="text-xl font-bold font-bengali mb-2">üí≥ ‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü</h2>
              <p className="text-green-100 font-bengali">‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶Ç‡¶ï‡¶ø‡¶Ç ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶∏‡¶π‡¶ú‡ßá‡¶á ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®</p>
            </div>
            <button
              onClick={() => navigate('/student-payment')}
              className="bg-white text-blue-600 px-6 py-3 rounded-lg font-bold hover:bg-gray-100 transition-all transform hover:scale-105 shadow-md font-bengali"
            >
              ‡¶è‡¶ñ‡¶®‡¶á ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶® ‚Üí
            </button>
          </div>
        </div>
        {/* Student Info Card */}
        <div className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg p-6 border border-blue-200">
          <div className="flex items-center space-x-4">
            <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center overflow-hidden border-4 border-white shadow-lg">
              {studentData?.photo ? (
                <img 
                  src={studentData.photo} 
                  alt={studentData.name} 
                  className="w-full h-full object-cover"
                />
              ) : (
                <span className="text-2xl font-bold text-blue-600">
                  {user.name.charAt(0)}
                </span>
              )}
            </div>
            <div>
              <h3 className="text-xl font-bold text-gray-800 font-bengali">{user.name}</h3>
              <p className="text-sm text-gray-600 font-bengali">‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü</p>
              {studentData && (
                <p className="text-sm text-blue-600 font-bengali">
                  ‡¶∞‡ßã‡¶≤: {studentData.roll} | ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏: {studentData.class}-{studentData.section}
                </p>
              )}
            </div>
          </div>
        </div>

        {studentData ? (
          <>
            {/* Financial Overview */}
            <div className="grid grid-cols-1 md:grid-cols-5 gap-6">
              <div className="bg-white rounded-lg shadow-sm p-6 border-l-4 border-blue-500">
                <div className="flex items-center">
                  <Wallet className="w-8 h-8 text-blue-500" />
                  <div className="ml-4">
                    <h3 className="text-lg font-semibold text-blue-800 font-bengali">‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏</h3>
                    <p className={`text-3xl font-bold ${studentData.balance <= 300 ? 'text-red-600' : 'text-blue-600'}`}>
                      ‡ß≥{studentData.balance}
                    </p>
                    {studentData.balance <= 300 && (
                      <p className="text-sm text-red-600 font-bengali mt-1">‚ö†Ô∏è ‡¶ï‡¶Æ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏!</p>
                    )}
                  </div>
                </div>
              </div>

              <div className="bg-white rounded-lg shadow-sm p-6 border-l-4 border-green-500">
                <div className="flex items-center">
                  <CreditCard className="w-8 h-8 text-green-500" />
                  <div className="ml-4">
                    <h3 className="text-lg font-semibold text-green-800 font-bengali">‡¶¶‡ßà‡¶®‡¶ø‡¶ï ‡¶Æ‡¶ø‡¶≤ ‡¶ö‡¶æ‡¶∞‡ßç‡¶ú</h3>
                    <p className="text-3xl font-bold text-green-600">‡ß≥{studentData.mealCharge}</p>
                    <p className="text-sm text-gray-600 font-bengali">‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶¶‡¶ø‡¶® ‡¶ï‡¶æ‡¶ü‡¶æ ‡¶π‡¶Ø‡¶º</p>
                  </div>
                </div>
              </div>

              <div className="bg-white rounded-lg shadow-sm p-6 border-l-4 border-purple-500">
                <div className="flex items-center">
                  <UserCheck className="w-8 h-8 text-purple-500" />
                  <div className="ml-4">
                    <h3 className="text-lg font-semibold text-purple-800 font-bengali">‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏</h3>
                    <p className={`text-2xl font-bold font-bengali ${studentData.balance > 300 ? 'text-green-600' : 'text-red-600'}`}>
                      {studentData.balance > 300 ? '‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º ‚úì' : '‡¶ï‡¶Æ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏ ‚ö†Ô∏è'}
                    </p>
                    <p className="text-sm text-gray-600 font-bengali">
                      {studentData.balance > 300 ? '‡¶Æ‡¶ø‡¶≤ ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶Ü‡¶õ‡ßá' : '‡¶ü‡¶æ‡¶ï‡¶æ ‡¶ú‡¶Æ‡¶æ ‡¶¶‡¶ø‡¶®'}
                    </p>
                  </div>
                </div>
              </div>

              <div className="bg-white rounded-lg shadow-sm p-6 border-l-4 border-green-500">
                <div className="flex items-center">
                  <UserCheck className="w-8 h-8 text-green-500" />
                  <div className="ml-4">
                    <h3 className="text-lg font-semibold text-green-800 font-bengali">‡¶Æ‡ßã‡¶ü ‡¶â‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§</h3>
                    <p className="text-3xl font-bold text-green-600">
                      {attendance.filter(a => a.studentId === studentData.id && a.present).length} ‡¶¶‡¶ø‡¶®
                    </p>
                    <p className="text-sm text-gray-600 font-bengali">‡¶∏‡¶∞‡ßç‡¶¨‡¶Æ‡ßã‡¶ü ‡¶â‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§‡¶ø</p>
                  </div>
                </div>
              </div>

              <div className="bg-white rounded-lg shadow-sm p-6 border-l-4 border-red-500">
                <div className="flex items-center">
                  <div className="w-8 h-8 bg-red-100 rounded-full flex items-center justify-center">
                    <span className="text-red-600 font-bold text-lg">‚úó</span>
                  </div>
                  <div className="ml-4">
                    <h3 className="text-lg font-semibold text-red-800 font-bengali">‡¶Æ‡ßã‡¶ü ‡¶Ö‡¶®‡ßÅ‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§</h3>
                    <p className="text-3xl font-bold text-red-600">
                      {attendance.filter(a => a.studentId === studentData.id && !a.present).length} ‡¶¶‡¶ø‡¶®
                    </p>
                    <p className="text-sm text-gray-600 font-bengali">‡¶∏‡¶∞‡ßç‡¶¨‡¶Æ‡ßã‡¶ü ‡¶Ö‡¶®‡ßÅ‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§‡¶ø</p>
                  </div>
                </div>
              </div>
            </div>

            {/* Balance Alert */}
            {studentData.balance <= 300 && (
              <div className="bg-red-50 border border-red-200 rounded-lg p-6">
                <div className="flex items-center">
                  <AlertTriangle className="w-8 h-8 text-red-500" />
                  <div className="ml-4">
                    <h3 className="text-lg font-semibold text-red-800 font-bengali">
                      ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏ ‡¶ï‡¶Æ ‡¶∏‡¶§‡¶∞‡ßç‡¶ï‡¶§‡¶æ
                    </h3>
                    <p className="text-red-700 font-bengali mt-2">
                      ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏ ‡¶ï‡¶Æ ‡¶π‡¶Ø‡¶º‡ßá ‡¶ó‡ßá‡¶õ‡ßá‡•§ ‡¶Ö‡¶≠‡¶ø‡¶≠‡¶æ‡¶¨‡¶ï‡¶ï‡ßá ‡¶ú‡¶æ‡¶®‡¶ø‡¶Ø‡¶º‡ßá ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶ú‡¶Æ‡¶æ ‡¶¶‡¶ø‡¶®‡•§
                    </p>
                    <button
                      onClick={() => navigate('/student-payment')}
                      className="mt-4 bg-red-600 text-white px-6 py-3 rounded-lg hover:bg-red-700 transition-all transform hover:scale-105 font-bengali font-bold shadow-lg"
                    >
                      üöÄ ‡¶è‡¶ñ‡¶®‡¶á ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
                    </button>
                    <div className="mt-4 bg-white rounded-lg p-4 border border-red-200">
                      <h4 className="font-medium text-gray-800 font-bengali mb-2">‡¶Ö‡¶≠‡¶ø‡¶≠‡¶æ‡¶¨‡¶ï‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø:</h4>
                      <p className="text-gray-700 font-bengali">‡¶®‡¶æ‡¶Æ: {studentData.parentName}</p>
                      <p className="text-gray-700">‡¶´‡ßã‡¶®: {studentData.parentPhone}</p>
                    </div>
                  </div>
                </div>
              </div>
            )}

            {/* Mobile Payment Options */}
            <div className="bg-gradient-to-r from-pink-50 to-purple-50 rounded-lg p-6 border border-pink-200">
              <h3 className="text-lg font-semibold text-gray-800 mb-4 font-bengali">üí≥ ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶Ö‡¶™‡¶∂‡¶®</h3>
              <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                <button
                  onClick={() => navigate('/student-payment')}
                  className="bg-pink-500 text-white p-4 rounded-lg hover:bg-pink-600 transition-all transform hover:scale-105 shadow-md"
                >
                  <div className="text-center">
                    <div className="text-2xl mb-2">üì±</div>
                    <h4 className="font-bold font-bengali">‡¶¨‡¶ø‡¶ï‡¶æ‡¶∂</h4>
                    <p className="text-xs text-pink-100 font-bengali">‡¶Æ‡¶æ‡¶∞‡ßç‡¶ö‡ßá‡¶®‡ßç‡¶ü</p>
                  </div>
                </button>

                <button
                  onClick={() => navigate('/student-payment')}
                  className="bg-orange-500 text-white p-4 rounded-lg hover:bg-orange-600 transition-all transform hover:scale-105 shadow-md"
                >
                  <div className="text-center">
                    <div className="text-2xl mb-2">üí≥</div>
                    <h4 className="font-bold font-bengali">‡¶®‡¶ó‡¶¶</h4>
                    <p className="text-xs text-orange-100 font-bengali">‡¶™‡¶æ‡¶∞‡ßç‡¶∏‡ßã‡¶®‡¶æ‡¶≤</p>
                  </div>
                </button>

                <button
                  onClick={() => navigate('/student-payment')}
                  className="bg-purple-500 text-white p-4 rounded-lg hover:bg-purple-600 transition-all transform hover:scale-105 shadow-md"
                >
                  <div className="text-center">
                    <div className="text-2xl mb-2">üöÄ</div>
                    <h4 className="font-bold font-bengali">‡¶∞‡¶ï‡ßá‡¶ü</h4>
                    <p className="text-xs text-purple-100 font-bengali">‡¶è‡¶ú‡ßá‡¶®‡ßç‡¶ü</p>
                  </div>
                </button>

                <button
                  onClick={() => navigate('/student-payment')}
                  className="bg-blue-500 text-white p-4 rounded-lg hover:bg-blue-600 transition-all transform hover:scale-105 shadow-md"
                >
                  <div className="text-center">
                    <div className="text-2xl mb-2">üíé</div>
                    <h4 className="font-bold font-bengali">‡¶â‡¶™‡¶æ‡¶Ø‡¶º</h4>
                    <p className="text-xs text-blue-100 font-bengali">‡¶™‡¶æ‡¶∞‡ßç‡¶∏‡ßã‡¶®‡¶æ‡¶≤</p>
                  </div>
                </button>
              </div>
            </div>
            {/* Recent Activity */}
            <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
              {/* Attendance Summary */}
              <div className="bg-white rounded-lg shadow-sm p-6">
                <h3 className="text-lg font-semibold text-gray-800 mb-4 font-bengali">‡¶â‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§‡¶ø‡¶∞ ‡¶∏‡¶æ‡¶∞‡¶∏‡¶Ç‡¶ï‡ßç‡¶∑‡ßá‡¶™</h3>
                <div className="space-y-4">
                  {/* Attendance Rate */}
                  <div className="text-center">
                    <div className="text-2xl font-bold text-blue-600 mb-2">
                      {attendance.filter(a => a.studentId === studentData.id).length > 0 
                        ? Math.round((attendance.filter(a => a.studentId === studentData.id && a.present).length / 
                          attendance.filter(a => a.studentId === studentData.id).length) * 100)
                        : 0}%
                    </div>
                    <p className="text-sm text-gray-600 font-bengali">‡¶â‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§‡¶ø‡¶∞ ‡¶π‡¶æ‡¶∞</p>
                  </div>
                  
                  {/* Progress Bar */}
                  <div className="w-full bg-gray-200 rounded-full h-3">
                    <div 
                      className="bg-gradient-to-r from-green-400 to-green-600 h-3 rounded-full transition-all duration-500"
                      style={{ 
                        width: `${attendance.filter(a => a.studentId === studentData.id).length > 0 
                          ? (attendance.filter(a => a.studentId === studentData.id && a.present).length / 
                            attendance.filter(a => a.studentId === studentData.id).length) * 100
                          : 0}%` 
                      }}
                    />
                  </div>
                  
                  {/* Stats */}
                  <div className="grid grid-cols-2 gap-4 text-center">
                    <div className="bg-green-50 rounded-lg p-3">
                      <div className="text-lg font-bold text-green-600">
                        {attendance.filter(a => a.studentId === studentData.id && a.present).length}
                      </div>
                      <div className="text-xs text-green-700 font-bengali">‡¶â‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§ ‡¶¶‡¶ø‡¶®</div>
                    </div>
                    <div className="bg-red-50 rounded-lg p-3">
                      <div className="text-lg font-bold text-red-600">
                        {attendance.filter(a => a.studentId === studentData.id && !a.present).length}
                      </div>
                      <div className="text-xs text-red-700 font-bengali">‡¶Ö‡¶®‡ßÅ‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§ ‡¶¶‡¶ø‡¶®</div>
                    </div>
                  </div>
                  
                  {/* This Month Stats */}
                  <div className="border-t pt-3">
                    <p className="text-sm text-gray-600 font-bengali mb-2">‡¶è‡¶á ‡¶Æ‡¶æ‡¶∏‡ßá‡¶∞ ‡¶â‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§‡¶ø:</p>
                    <div className="flex justify-between text-sm">
                      <span className="text-green-600 font-bengali">
                        ‚úì {attendance.filter(a => 
                          a.studentId === studentData.id && 
                          a.present && 
                          new Date(a.date).getMonth() === new Date().getMonth()
                        ).length} ‡¶¶‡¶ø‡¶®
                      </span>
                      <span className="text-red-600 font-bengali">
                        ‚úó {attendance.filter(a => 
                          a.studentId === studentData.id && 
                          !a.present && 
                          new Date(a.date).getMonth() === new Date().getMonth()
                        ).length} ‡¶¶‡¶ø‡¶®
                      </span>
                    </div>
                  </div>
                </div>
              </div>

              {/* My Attendance */}
              <div className="bg-white rounded-lg shadow-sm p-6">
                <h3 className="text-lg font-semibold text-gray-800 mb-4 font-bengali">‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶â‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§‡¶ø</h3>
                <div className="space-y-3">
                  {attendance
                    .filter(a => a.studentId === studentData.id)
                    .slice(0, 5)
                    .map(record => (
                      <div key={record.id} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                        <div className="flex items-center space-x-3">
                          <div className={`w-3 h-3 rounded-full ${record.present ? 'bg-green-500' : 'bg-red-500'}`} />
                          <span className="text-sm font-bengali">
                            {format(new Date(record.date), 'dd MMMM yyyy')}
                          </span>
                        </div>
                        <span className={`text-sm font-semibold font-bengali ${
                          record.present ? 'text-green-600' : 'text-red-600'
                        }`}>
                          {record.present ? '‡¶â‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§' : '‡¶Ö‡¶®‡ßÅ‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§'}
                        </span>
                      </div>
                    ))}
                </div>
              </div>

              {/* My Payments */}
              <div className="bg-white rounded-lg shadow-sm p-6">
                <h3 className="text-lg font-semibold text-gray-800 mb-4 font-bengali">‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü</h3>
                <div className="space-y-3">
                  {payments
                    .filter(p => p.studentId === studentData.id)
                    .slice(0, 5)
                    .map(payment => (
                      <div key={payment.id} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                        <div className="flex items-center space-x-3">
                          <TrendingUp className="w-4 h-4 text-green-500" />
                          <span className="text-sm font-bengali">
                            {format(new Date(payment.date), 'dd MMMM yyyy')}
                          </span>
                        </div>
                        <span className="text-sm font-semibold text-green-600">‡ß≥{payment.amount}</span>
                      </div>
                    ))}
                </div>
                <button
                  onClick={() => navigate('/student-payment')}
                  className="w-full mt-4 bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700 transition-colors font-bengali"
                >
                  ‡¶®‡¶§‡ßÅ‡¶® ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
                </button>
              </div>
            </div>

            {/* Balance Calculation */}
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
              <h3 className="text-lg font-semibold text-blue-800 mb-4 font-bengali">‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏ ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨</h3>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div className="text-center">
                  <p className="text-sm text-gray-600 font-bengali">‡¶Æ‡ßã‡¶ü ‡¶ú‡¶Æ‡¶æ</p>
                  <p className="text-xl font-bold text-green-600">
                    ‡ß≥{payments.filter(p => p.studentId === studentData.id).reduce((sum, p) => sum + p.amount, 0)}
                  </p>
                </div>
                <div className="text-center">
                  <p className="text-sm text-gray-600 font-bengali">‡¶Æ‡ßã‡¶ü ‡¶ñ‡¶∞‡¶ö</p>
                  <p className="text-xl font-bold text-red-600">
                    ‡ß≥{attendance.filter(a => a.studentId === studentData.id && a.present).length * studentData.mealCharge}
                  </p>
                </div>
                <div className="text-center">
                  <p className="text-sm text-gray-600 font-bengali">‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏</p>
                  <p className={`text-xl font-bold ${studentData.balance <= 300 ? 'text-red-600' : 'text-blue-600'}`}>
                    ‡ß≥{studentData.balance}
                  </p>
                </div>
              </div>
            </div>
          </>
        ) : (
          <div className="bg-white rounded-lg shadow-sm p-8 text-center">
            <AlertTriangle className="w-16 h-16 text-yellow-500 mx-auto mb-4" />
            <h3 className="text-xl font-semibold text-gray-800 mb-2 font-bengali">‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø</h3>
            <p className="text-gray-600 font-bengali">
              ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶ï‡ßã‡¶® ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Æ‡¶ø‡¶≤‡¶õ‡ßá ‡¶®‡¶æ‡•§ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶®‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®‡•§
            </p>
          </div>
        )}
      </div>
    );
      {/* Student Payment Portal */}
      {user?.role === 'student' && (
        <div className="bg-gradient-to-r from-green-50 to-blue-50 rounded-lg p-6 border border-green-200">
          <h3 className="text-lg font-semibold text-gray-800 mb-4 font-bengali">üí≥ ‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶® ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü</h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="bg-white rounded-lg p-4 border border-blue-200">
              <h4 className="font-medium text-blue-800 font-bengali mb-2">‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶Ç‡¶ï‡¶ø‡¶Ç</h4>
              <div className="space-y-2 text-sm">
                <div className="flex justify-between">
                  <span className="font-bengali">‡¶¨‡¶ø‡¶ï‡¶æ‡¶∂ ‡¶Æ‡¶æ‡¶∞‡ßç‡¶ö‡ßá‡¶®‡ßç‡¶ü:</span>
                  <span className="font-mono">‡ß¶‡ßß‡ß©‡ß¶ ‡ßØ‡ß™ ‡ßß‡ßØ‡ß™‡ß¶</span>
                </div>
                <div className="flex justify-between">
                  <span className="font-bengali">‡¶®‡¶ó‡¶¶ ‡¶™‡¶æ‡¶∞‡ßç‡¶∏‡ßã‡¶®‡¶æ‡¶≤:</span>
                  <span className="font-mono">‡ß¶‡ßß‡ß©‡ß¶‡ß© ‡ßØ‡ß™‡ßß ‡ßØ‡ß™‡ß¶</span>
                </div>
                <div className="flex justify-between">
                  <span className="font-bengali">‡¶∞‡¶ï‡ßá‡¶ü ‡¶è‡¶ú‡ßá‡¶®‡ßç‡¶ü:</span>
                  <span className="font-mono">‡ß¶‡ßß‡ß≠‡ßß‡ß®‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ</span>
                </div>
              </div>
              <button 
                onClick={() => navigate('/mobile-payment')}
                className="w-full mt-3 bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors font-bengali"
              >
                ‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶® ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
              </button>
            </div>
            
            <div className="bg-white rounded-lg p-4 border border-green-200">
              <h4 className="font-medium text-green-800 font-bengali mb-2">‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ó‡¶æ‡¶á‡¶°</h4>
              <ol className="text-sm text-gray-600 space-y-1 font-bengali">
                <li>‡ßß. ‡¶â‡¶™‡¶∞‡ßá‡¶∞ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞‡ßá Send Money ‡¶ï‡¶∞‡ßÅ‡¶®</li>
                <li>‡ß®. ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶ì ‡¶∞‡ßã‡¶≤ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶∞‡ßá‡¶´‡¶æ‡¶∞‡ßá‡¶®‡ßç‡¶∏‡ßá ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®</li>
                <li>‡ß©. ‡¶ü‡ßç‡¶∞‡¶æ‡¶®‡¶ú‡ßá‡¶ï‡¶∂‡¶® ID ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®</li>
                <li>‡ß™. ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤‡ßá ‡¶ú‡¶æ‡¶®‡¶ø‡¶Ø‡¶º‡ßá ‡¶¶‡¶ø‡¶®</li>
              </ol>
              <div className="mt-3 p-2 bg-yellow-50 border border-yellow-200 rounded text-xs text-yellow-800 font-bengali">
                üí° ‡¶ü‡¶ø‡¶™‡¶∏: ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶∞ ‡¶™‡¶∞ ‡¶Ö‡¶¨‡¶∂‡ßç‡¶Ø‡¶á ‡¶ü‡ßç‡¶∞‡¶æ‡¶®‡¶ú‡ßá‡¶ï‡¶∂‡¶® ID ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤‡ßá ‡¶ú‡¶æ‡¶®‡¶æ‡¶¨‡ßá‡¶®
              </div>
            </div>
          </div>
        </div>
      )}

  }

  // For non-student users, show admin/supervisor dashboard
  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <h1 className="text-2xl font-bold text-gray-800 font-bengali">‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶°</h1>
        <div className="text-sm text-gray-600 font-bengali">
          {format(new Date(), 'EEEE, MMMM dd, yyyy')}
        </div>
      </div>

      {/* Stats Grid - Now with working buttons */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6">
        {stats.map((stat, index) => (
          <button
            key={index}
            onClick={() => handleStatClick(stat.type)}
            className="bg-white rounded-lg shadow-sm p-6 hover:shadow-md transition-all duration-200 transform hover:scale-105 cursor-pointer group text-left"
          >
            <div className="flex items-center">
              <div className={`${stat.color} p-3 rounded-lg group-hover:scale-110 transition-transform duration-200`}>
                <stat.icon className="w-6 h-6 text-white" />
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-600 font-bengali group-hover:text-gray-800 transition-colors">
                  {stat.title}
                </p>
                <p className="text-2xl font-bold text-gray-900 group-hover:text-blue-600 transition-colors">
                  {stat.value}
                </p>
              </div>
            </div>
            
            {/* Hover indicator */}
            <div className="mt-2 opacity-0 group-hover:opacity-100 transition-opacity duration-200">
              <div className="text-xs text-blue-600 font-bengali">
                üëÜ ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡ßá ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®
              </div>
            </div>
          </button>
        ))}
      </div>

      {/* Low Balance Alert */}
      {lowBalanceStudents.length > 0 && (
        <div className="bg-red-50 border border-red-200 rounded-lg p-4">
          <div className="flex items-center">
            <AlertTriangle className="w-5 h-5 text-red-500" />
            <h3 className="ml-2 text-lg font-semibold text-red-800 font-bengali">
              ‡¶ï‡¶Æ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏ ‡¶∏‡¶§‡¶∞‡ßç‡¶ï‡¶§‡¶æ
            </h3>
          </div>
          <p className="mt-2 text-red-700 font-bengali">
            {lowBalanceStudents.length} ‡¶ú‡¶® ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏ ‡ß©‡ß¶‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶ï‡¶Æ‡•§
          </p>
          <div className="mt-3 space-y-1">
            {lowBalanceStudents.slice(0, 5).map(student => (
              <div key={student.id} className="flex justify-between text-sm">
                <span className="font-bengali">{student.name} ({student.roll})</span>
                <span className="font-semibold">‡ß≥{student.balance}</span>
              </div>
            ))}
          </div>
          <button
            onClick={() => handleStatClick('lowBalance')}
            className="mt-3 bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors font-bengali"
          >
            ‡¶∏‡¶¨ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®
          </button>
        </div>
      )}

      {/* Recent Activity */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <div className="bg-white rounded-lg shadow-sm p-6">
          <div className="flex items-center justify-between mb-4">
            <h3 className="text-lg font-semibold text-gray-800 font-bengali">‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶â‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§‡¶ø</h3>
            <button
              onClick={() => handleStatClick('attendance')}
              className="text-blue-600 hover:text-blue-800 text-sm font-bengali"
            >
              ‡¶∏‡¶¨ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶® ‚Üí
            </button>
          </div>
          {todayAttendance.length > 0 ? (
            <div className="space-y-3">
              {todayAttendance.slice(0, 5).map(record => {
                const student = students.find(s => s.id === record.studentId);
                return (
                  <div key={record.id} className="flex items-center justify-between">
                    <div className="flex items-center">
                      <div className={`w-3 h-3 rounded-full ${record.present ? 'bg-green-500' : 'bg-red-500'}`} />
                      <span className="ml-3 text-sm font-bengali">{student?.name || '‡¶Ö‡¶ú‡¶æ‡¶®‡¶æ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ'}</span>
                    </div>
                    <span className="text-xs text-gray-500 font-bengali">{record.method}</span>
                  </div>
                );
              })}
            </div>
          ) : (
            <div className="text-center py-4">
              <p className="text-gray-500 font-bengali">‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶ï‡ßã‡¶® ‡¶â‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§‡¶ø ‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶° ‡¶®‡ßá‡¶á</p>
            </div>
          )}
        </div>

        <div className="bg-white rounded-lg shadow-sm p-6">
          <div className="flex items-center justify-between mb-4">
            <h3 className="text-lg font-semibold text-gray-800 font-bengali">‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü</h3>
            <button
              onClick={() => handleStatClick('payments')}
              className="text-blue-600 hover:text-blue-800 text-sm font-bengali"
            >
              ‡¶∏‡¶¨ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶® ‚Üí
            </button>
          </div>
          {todayPayments.length > 0 ? (
            <div className="space-y-3">
              {todayPayments.slice(0, 5).map(payment => {
                const student = students.find(s => s.id === payment.studentId);
                return (
                  <div key={payment.id} className="flex items-center justify-between">
                    <div className="flex items-center">
                      <TrendingUp className="w-4 h-4 text-green-500" />
                      <span className="ml-3 text-sm font-bengali">{student?.name || '‡¶Ö‡¶ú‡¶æ‡¶®‡¶æ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ'}</span>
                    </div>
                    <span className="text-sm font-semibold text-green-600">‡ß≥{payment.amount}</span>
                  </div>
                );
              })}
            </div>
          ) : (
            <div className="text-center py-4">
              <p className="text-gray-500 font-bengali">‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶ï‡ßã‡¶® ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶° ‡¶®‡ßá‡¶á</p>
            </div>
          )}
        </div>
      </div>

      {/* Quick Actions */}
      <div className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg p-6 border border-blue-200">
        <h3 className="text-lg font-semibold text-gray-800 mb-4 font-bengali">‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶ï‡¶æ‡¶ú</h3>
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
          <button
            onClick={() => navigate('/students')}
            className="bg-white rounded-lg p-4 border border-blue-200 hover:bg-blue-50 transition-colors transform hover:scale-105 duration-200"
          >
            <div className="text-center">
              <div className="text-2xl mb-2">üë•</div>
              <h4 className="font-medium text-gray-800 font-bengali">‡¶®‡¶§‡ßÅ‡¶® ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ</h4>
              <p className="text-sm text-gray-600 font-bengali">‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®</p>
            </div>
          </button>

          <button
            onClick={() => navigate('/attendance')}
            className="bg-white rounded-lg p-4 border border-green-200 hover:bg-green-50 transition-colors transform hover:scale-105 duration-200"
          >
            <div className="text-center">
              <div className="text-2xl mb-2">‚úÖ</div>
              <h4 className="font-medium text-gray-800 font-bengali">‡¶â‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§‡¶ø ‡¶®‡¶ø‡¶®</h4>
              <p className="text-sm text-gray-600 font-bengali">‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶π‡¶æ‡¶ú‡¶ø‡¶∞‡¶æ</p>
            </div>
          </button>

          <button
            onClick={() => navigate('/payments')}
            className="bg-white rounded-lg p-4 border border-purple-200 hover:bg-purple-50 transition-colors transform hover:scale-105 duration-200"
          >
            <div className="text-center">
              <div className="text-2xl mb-2">üí≥</div>
              <h4 className="font-medium text-gray-800 font-bengali">‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶®‡¶ø‡¶®</h4>
              <p className="text-sm text-gray-600 font-bengali">‡¶®‡¶§‡ßÅ‡¶® ‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü</p>
            </div>
          </button>

          <button
            onClick={() => navigate('/reports')}
            className="bg-white rounded-lg p-4 border border-orange-200 hover:bg-orange-50 transition-colors transform hover:scale-105 duration-200"
          >
            <div className="text-center">
              <div className="text-2xl mb-2">üìä</div>
              <h4 className="font-medium text-gray-800 font-bengali">‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®</h4>
              <p className="text-sm text-gray-600 font-bengali">‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨</p>
            </div>
          </button>
        </div>
      </div>

      {/* Demo Data Notice */}
      <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
        <div className="flex items-center">
          <Users className="w-5 h-5 text-blue-500" />
          <h3 className="ml-2 text-lg font-semibold text-blue-800 font-bengali">
            ‡¶°‡ßá‡¶Æ‡ßã ‡¶°‡¶æ‡¶ü‡¶æ
          </h3>
        </div>
        <p className="mt-2 text-blue-700 font-bengali">
          ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶®‡ßá ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ‡ßá {totalStudents} ‡¶ú‡¶® ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶∞ ‡¶°‡ßá‡¶Æ‡ßã ‡¶°‡¶æ‡¶ü‡¶æ ‡¶∞‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶®‡¶§‡ßÅ‡¶® ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶§‡ßá "‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ" ‡¶Æ‡ßá‡¶®‡ßÅ‡¶§‡ßá ‡¶Ø‡¶æ‡¶®‡•§
        </p>
        <button
          onClick={() => navigate('/students')}
          className="mt-3 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors font-bengali"
        >
          ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ ‡¶™‡ßá‡¶ú‡ßá ‡¶Ø‡¶æ‡¶®
        </button>
      </div>
    </div>
  );
};

export default Dashboard;